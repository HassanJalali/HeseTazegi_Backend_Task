// <auto-generated />
using System;
using HeseTazegi.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HeseTazegi.Database.Migrations
{
    [DbContext(typeof(HeseTazegiDbContext))]
    partial class HeseTazegiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HeseTazegi.Domain.Foods.Food", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVarChar");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("DateTime");

                    b.HasKey("Id");

                    b.ToTable("Foods", "HeseTazegi");
                });

            modelBuilder.Entity("HeseTazegi.Domain.Ingredients.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool>("IsFoodAllergen")
                        .HasColumnType("Bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVarChar");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("DateTime");

                    b.HasKey("Id");

                    b.ToTable("Ingredients", "HeseTazegi");
                });

            modelBuilder.Entity("HeseTazegi.Domain.Foods.Food", b =>
                {
                    b.OwnsMany("HeseTazegi.Domain.Foods.FoodIngredient", "Ingredients", b1 =>
                        {
                            b1.Property<Guid>("FoodId")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("IngredientId")
                                .HasColumnType("UniqueIdentifier");

                            b1.HasKey("FoodId", "Id");

                            b1.HasIndex("IngredientId");

                            b1.ToTable("FoodIngredient", "HeseTazegi");

                            b1.WithOwner()
                                .HasForeignKey("FoodId");

                            b1.HasOne("HeseTazegi.Domain.Ingredients.Ingredient", null)
                                .WithMany()
                                .HasForeignKey("IngredientId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();
                        });

                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
